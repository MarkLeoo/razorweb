@page
@model efcore.Pages_Blog.IndexModel

@{
    ViewData["Title"] = "Các bài viết";
    var i = 0;
}

@{
    var pagingModel = new MarkLeo.Helpers.PagingModel()
    {
        currentPage = Model.currentPage,
        countPages = Model.countPages,
        generateUrl = (int? pages) => Url.Page("/Blog/Index", new { pages = pages })
    };
    await Html.RenderPartialAsync("_Paging", pagingModel);
}

<h1>Danh sách bài viết</h1>

<form asp-page="./Index" method="get">
    <label for="">Tìm kiếm</label>
    <input name="SearchString">
    <button class="btn btn-info" type="submit">Tìm</button>
</form>

<p>
    <a asp-page="Create" class="btn btn-primary">Tạo bài viết mới</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>STT</th>
            <th>
                @Html.DisplayNameFor(model => model.Article[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Article[0].Created)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Article)
        {
            <tr>
                <td>@(++i)</td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
